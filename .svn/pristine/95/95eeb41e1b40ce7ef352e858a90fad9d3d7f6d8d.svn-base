<!doctype html>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
	<meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
	<title>云衣橱头部</title>
	<link rel="stylesheet" type="text/css" href="../css/api.css"/>
	<link rel="stylesheet" type="text/css" href="../css/2_0/rem.css"/>
	<link rel="stylesheet" type="text/css" href="../css/2_0/util.css"/>
	<link rel="stylesheet" type="text/css" href="../css/fonts/duola_iconfont2.css"/>
	<link rel="stylesheet" type="text/css" href="../css/swiper.min.css"/>
	<link rel="stylesheet" type="text/css" href="../components/slideswipe/slideswipe.css"/>
	<style>
		#short-header{
			padding: 0 0.5rem;
			height: 2.5rem;
			overflow: hidden;
		}
		#short-header .my-hit-color{
			background: #F6F6F6;
			border-radius: 2px;
			font-family: SourceHanSansCN-Normal;
			font-size: 0.8rem;
			color: #454545;
			padding: 0.25rem 0.45rem;
			margin: 0 0.5rem;
		}
		#short-header-size{
			font-family: ArialMT;
		}
		#short-header .icon-lower{
			font-size: 0.5rem;
			color: #4A4A4A;
			margin-right: 0.5rem;
		}
		#all-header{
			height: 0rem;
			overflow: hidden;
		}
		#size-container .slide-swipe{
			border: none;
			font-family: ArialMT;
		}
		#size-container .swiper-slide span{
			font-family: ArialMT;
		}
	</style>
</head>
<body>

<div id="frame1-header">
	<!--尺码和季节折叠头部-->
	<div id="short-header" tap onclick="showAllHeader(this)" class="flex flex-vertical-center flex-space-between">
		<div>
			<span class="my-hit-color">季节 <samll id="short-header-season"></samll></span>
			<span class="my-hit-color">尺码 <samll id="short-header-size"></samll></span>
		</div>
		<span class="duola-iconfont icon-lower"></span>
	</div>

	<!--尺码和季节展开头部-->
	<div id="all-header">
		<div id="season-container"></div>
		<div id="size-container"></div>
	</div>
</div>

<script id="slideswipe-template" type="text/x-dot-template">
	<div class="slide-swipe swiper-container">
		<div class="swiper-wrapper">
			{{~it.data:value:index}}
				<div class="swiper-slide flex flex-center" tapmode onclick="{{="slideSwipeClick(this,'"+index+"','"+value+"','"+it.callback+"')"}}"><span class="{{=index == it.activeIndex ? 'my-hit-color' : ''}}" title="{{=index}}">{{=value}}</span></div>
			{{~}}
		</div>
	</div>
</script>

</body>
</html>

<script type="text/javascript" src="../script/api.js"></script>
<script type="text/javascript" src="../script/uz.js"></script>
<script type="text/javascript" src="../script/doT_min.js"></script>
<script type="text/javascript" src="../script/swiper.min.js"></script>
<script type="text/javascript" src="../components/slideswipe/slideswipe.js"></script>
<script type="text/javascript">
	
	var headerHeight = 0;//云衣橱头部高度
	var gSeasonIndex = 0;//全局当前选择季节的index
	var gSizeIndex = 0;//全局当前选择尺码的index
	var shortHeaderSeasonEl = null;//折叠头部当前选择的季节的dom
	var shortHeaderSizeEl = null;//折叠头部当前选择尺码的dom
	var shortHeaderEl = null;//折叠头部dom
	var allHeaderEl = null;//展开头部dom
	var seasons = null;//季节数据
	var sizes = null;//尺码数据

	apiready = function(){
		var frame1Header = $api.byId('frame1-header');
		$api.fixStatusBar(frame1Header);

		seasons = $api.getStorage('seasons') || CONSTANT.SEASONALL;
		sizes = $api.getStorage('sizes') || CONSTANT.SIZESALL;
		headerHeight = api.pageParam.data.headerHeight || 75;

		//初始化当前季节和尺码
		var seasonIndex = api.pageParam.data.seasonIndex || 0;
		var sizeIndex = api.pageParam.data.sizeIndex || 0;
		if(gSeasonIndex != seasonIndex){
			gSeasonIndex = seasonIndex;
		}
		if(gSizeIndex != sizeIndex){
			gSizeIndex = sizeIndex;
		}

		//初始化折叠头部
		shortHeaderSeasonEl = $api.byId('short-header-season');
		shortHeaderSizeEl = $api.byId('short-header-size');
		if(shortHeaderSeasonEl){
			$api.text(shortHeaderSeasonEl,seasons[gSeasonIndex]);
		}
		if(shortHeaderSizeEl){
			$api.text(shortHeaderSizeEl,sizes[gSizeIndex]);
		}

		//初始化展开头部的季节和尺码侧滑组件
		initSlideSwipe('season-container',seasons,gSeasonIndex,'seasonSlideSwipeClick');
		initSlideSwipe('size-container',sizes,gSizeIndex,'sizeSlideSwipeClick');

		shortHeaderEl = $api.byId('short-header');
		allHeaderEl = $api.byId('all-header');
	};

	//异步更新展开头部和折叠头部的季节和尺码
	function execSeasonSizeIndex(seasonIndex,sizeIndex){
//		console.log(getLogStr([seasonIndex,sizeIndex]));
		if(!isNaN(parseInt(seasonIndex)) && gSeasonIndex != seasonIndex){
			gSeasonIndex = seasonIndex;
			setSlideSwipeHitColor('season-container',gSeasonIndex);
			if(shortHeaderSeasonEl){
				$api.text(shortHeaderSeasonEl,seasons[gSeasonIndex]);
			}
		}
		if(!isNaN(parseInt(sizeIndex)) && gSizeIndex != sizeIndex){
			gSizeIndex = sizeIndex;
			setSlideSwipeHitColor('size-container',gSizeIndex);
			if(shortHeaderSizeEl){
				$api.text(shortHeaderSizeEl,sizes[gSizeIndex]);
			}
		}
	}


	//侧滑组件季节点击
	function seasonSlideSwipeClick(index,value){
		if(!isNaN(parseInt(index)) && gSeasonIndex != index){
			gSeasonIndex = index;
			if(shortHeaderSeasonEl){
				$api.text(shortHeaderSeasonEl,seasons[gSeasonIndex]);
			}
			//hack 表示请求数据后滚动到某个锚点
			var execScriptFun = getExecScript('execGetCloudsetBySeason',[index,value,'hack']);
			api.execScript({
				name:'root',
				frameName: 'footer_tab_2',
				script: execScriptFun
			});
		}
	}
	//侧滑组件尺码点击
	function sizeSlideSwipeClick(index,value){
		if(!isNaN(parseInt(index)) && gSizeIndex != index){
			gSizeIndex = index;
			if(shortHeaderSizeEl){
				$api.text(shortHeaderSizeEl,sizes[gSizeIndex]);
			}
			var execScriptFun = getExecScript('execGetCloudsetBySize',[index,value,'hack']);
			api.execScript({
				name:'root',
				frameName: 'footer_tab_2',
				script: execScriptFun
			});
		}
	}

	//切换footer，显示折叠头部
	function execHackShowShortHeader(){
		$api.css(allHeaderEl,'height:0px;transition: none;');
		$api.css(shortHeaderEl,'height:2.5rem;transition:none;');
	}

	//点击折叠头部箭头展开头部
	function showAllHeader(el){
		$api.css(el,'height:0px;transition:none;');
		$api.css(allHeaderEl,'height:5rem;transition: height 0.3s linear;');
		api.execScript({
			name:'root',
			script: 'showFrame1AllHeader()'
		});
		setTimeout(function(){
			api.setFrameAttr({
				name: 'frame1Header',
				rect: {
					x: 0,
					y: 0,
					w: 'auto',
					h: headerHeight + parseInt($api.cssVal($api.dom('html'),'font-size')) * 2.5
				}
			});
		},180);
	}

</script>