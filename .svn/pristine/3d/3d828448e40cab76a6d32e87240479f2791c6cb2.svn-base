<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="viewport"
          content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
    <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
    <title>多啦女神排行榜</title>
    <link rel="stylesheet" type="text/css" href="../../css/api.css"/>
    <!--AUI根据使用情况引入-->
    <link rel="stylesheet" type="text/css" href="../../css/2_0/aui_2_0.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/2_0/rem.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/2_0/util.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/fonts/duola_iconfont2.css"/>
    <style>
        html, body{
            background: transparent;
            padding: 0rem;
            margin: 0rem
        }
        .shadow-l{
            background-color: #ECECEC;
            height: 0.5rem;
        }
        .shadow-s{
            background-color: #ECECEC;
            height: 1px;
        }
        .goddessImg{
            width: 100%;
            height: 100vw;
            background: transparent;
            position: relative;
        }
        .goddessImgContent{
            width: 100%;
            height: 2.6rem;
            background-color: rgba(0,0,0,0.3);
            position: absolute;
            left: 0rem;
            bottom: 0rem;
        }
        .avatar{
            width: 1.75rem;
            height:1.75rem;
            position: absolute;
            left: 0.6rem;
            border-radius: 50%;
            bottom: 0.425rem;
        }
        .userContent{
            height: 2.6rem;
            line-height: 2.6rem;
            position: absolute;
            left: 3.5rem;
            bottom: 0rem;
            font-family: SourceHanSansCN-Normal;
            font-size: 0.7rem;
            color: #FFFFFF;
            width: 8rem;
            overflow: hidden;
        }
        .like{
            width: 1.5rem;
            height: 2.6rem;
            line-height: 2.6rem;
            position: absolute;
            right: 2.2rem;
            bottom: 0rem;
        }
        .likeCount{
            height:2.6rem;
            line-height: 2.6rem;
            position: absolute;
            right: 1rem;
            bottom: 0rem;
            font-family: SourceHanSansCN-Normal;
            font-size: 0.7rem;
            color: #FFFFFF;
        }
        .runkingItem{
            width: 100%;
            height: 3rem;
            position: relative;
        }
        .runkingNum{
            width: 3rem;
            height:3rem;
            background-color: #FF3C54;
            border-top-right-radius: 50%;
            border-bottom-right-radius: 10%;
            text-align: center;
            line-height: 3rem;
            color: #FFFFFF;
            font-size: 1.6rem;
        }
        .avatar2{
            width: 1.75rem;
            height:1.75rem;
            position: absolute;
            left: 3.5rem;
            border-radius: 50%;
            bottom: 0.625rem;
        }
        .userName2{
            height: 3rem;
            line-height: 3rem;
            position: absolute;
            left: 5.5rem;
            bottom: 0rem;
            font-family: SourceHanSansCN-Normal;
            font-size: 0.7rem;
            color: #000000;
        }
        .like2{
            width: 1.5rem;
            height: 3rem;
            line-height: 3rem;
            position: absolute;
            right: 2.2rem;
            bottom: 0rem;
        }
        .likeCount2{
            height:3rem;
            line-height: 3rem;
            position: absolute;
            right: 1rem;
            bottom: 0rem;
            font-family: SourceHanSansCN-Normal;
            font-size: 0.7rem;
            color: #000000;
        }
        #loading {
            /*padding-bottom: 2.8rem;*/
            text-align: center;
        }
        .eldest-first{
            position: absolute;
            top: 0.4rem;
            left: 1rem;
            z-index: 1;

        }
        .eldest-first i{
            font-size: 1.2rem;
        }
        .eldest-first .runkNum{
            vertical-align: -0.1rem;
            color:#FF3C54;
            display: inline-block;
            font-size: 1.2rem;
            margin-left: 0.3rem;

        }
        
        .tab-header{
            width:100%;
            height: 2.5rem;
            line-height: 2.5rem;
            z-index: 999;
        }
        .tab-header-group{
        	width:100%;
        	overflow: hidden;
        	height: 2.5rem;
        	line-height: 2.5rem;
        	background:#fff;
        }
        .tab-header-item{
        	float: left;
        	box-sizing: border-box;
        	width: 50%;
        	font-family: SourceHanSansCN-Normal;
            font-size: 0.8rem;
            color: #000000;
            text-align: center;
        }
        .tab-header-item.active{
        	color:#FF3C54;
        	border-bottom: 1px solid #FF3C54;
        }
        .hot-group{
        	width:100%;
        	background: #F8F8F8;
        }
        .hot-item{
        	display:block;
        	width:100%;
        	overflow:hidden;
        	padding-left:3rem;
        	margin-top:0.5rem;
        	padding-bottom:0.5rem;
        	background:#FFF;
        }
        .hot-ranking{
        	float:left;
        	width:3rem;
        	margin-left:-3rem;
        }
        .hot-item .runkingNum{
        	background: #fff;
        	color: #1A1A1A;
        }
        .hot-item .runkingNum span{
        	color:#fff;
        }
        .hot-item:nth-of-type(1) .runkingNum{
        	background: #FF3C54;
        	color: #FFFFFF;
        }
        .hot-item:nth-of-type(2) .runkingNum{
        	background: #ff596d;
        	color: #FFFFFF;
        }
        .hot-item:nth-of-type(3) .runkingNum{
        	background: #ff7d8d;
        	color: #FFFFFF;
        }
        .hot-life{
        	float:left;
        	width:100%;
        }
        .hot-life-head{
        	overflow:hidden;
        	padding: 0.5rem 1rem;
        	line-height: 2rem;
            position: relative;
        }
        .hot-life-head img{
        	width:2rem;
        	height: 2rem;
        	border-radius:50%;
        }
        .hot-life-author{
        	line-height: 2rem;
        	padding-left:0.5rem;
        	font-family: SourceHanSansCN-Blob;
        	color:#000;
        	width: 8rem;
        	white-space: nowrap;
        	overflow:hidden;
        	text-overflow:ellipsis;
        }
        .hot-life-action{
        	/*position: absolute;*/
        }
        .hot-life-action i{
        	color:#FF3C54;
        	margin-right: 0.5rem;
        	font-size:0.8rem;
        	vertical-align: middle;
        }
        .hot-life-body{
        	width:100%;
        }
        .hot-life-body ul{
        	width:100%;
        	overflow:hidden;
        }
        .hot-life-body ul li{
        	float:left;
        	width: 33.33333%;
        	box-sizing: border-box;
        	padding:0.5rem;
        }
        .hot-life-body ul li img{
        	max-width: 100%;
        	width: 100%;
        }
        #btn{
            width: 2rem;
            height:2rem;
            position:fixed;
            right:1rem;
            bottom:1.3rem;
            border: 1px solid #f7f7f7;
            background-color: #FFFFFF;
            border-radius: 50%;
            z-index: 999;
        }
        #btn i{
            display: inline-block;
            width: 2rem;
            height: 2rem;
            line-height: 2rem;
            margin: 0 auto;
            font-size: 0.55rem;
            color: #000;
            text-align: center;
        }
        #btn:active { background: #F8F8F8;}
        .unlike{
            width: 1.5rem;
            height: 3rem;
            line-height: 3rem;
            color: #FF3C54
        }
        .liked{
            width: 1.5rem;
            height: 3rem;
            line-height: 3rem;
            color: #FF3C54

        }
        .life-action{
            position: absolute;
            top: 0;
            right: 0;
            /*float:right;*/
            text-align:left;
            height: 3rem;

            /*margin-top: -3rem;*/
        }
        .life-action-item{
            position: relative;
            padding:0 1rem;
            line-height: 3rem;
        }
        .life-action-item i{
            vertical-align: middle;
        }
        .life-action-item .life-vote-count{
            /*position:absolute;*/
            /*top:0;*/
            /*left:2.9rem;*/
            line-height:3rem;
            margin-left:0.2rem;
            vertical-align: middle;
        }
    </style>
</head>
<body>
<header class="tab-header" >
	<ul class="tab-header-group" style="position: fixed">
		<li id="tab-header-hot" class="tab-header-item active" onclick="showTab(this, 'hotListContainer')">女神热帖榜</li>
		<li class="tab-header-item" onclick="showTab(this, 'goddessListContainer')">女神累计榜</li>
	</ul>
</header>
<a href="javascript:;" id="btn" class="hide" title="回到顶部" >
    <i class="duola-iconfont icon-dingbu" id="top"></i>
</a>
<div id="app">

	<div id="hotListContainer">
		<!--<ul class="hot-group">
			<li class="hot-item">
				<div class="hot-ranking">
					<span class="runkingNum">
			            1<span style="font-size: 0.7rem;">st</span>
			        </span>
				</div>
				<div class="hot-life">
					<div class="hot-life-head">
						<img src="" alt="" />
						<span>这是一个用户名</span>
						<span><i class="duola-iconfont icon-follow"></i>3000</span>
					</div>
					<div class="hot-life-body">
						<ul>
							<li><img src="" /></li>
						</ul>
						<p>这是我发的说说的内容额呵呵呵</p>
					</div>
				</div>
			</li>
		</ul>-->
	</div>
    <div id="goddessListContainer" class="hide">
    </div>


    <!--<div id="loading" style="font-size: 12px; color: #999999;">-->
        <!--<img src="../../icon/loading.gif" width="16"/>-->
        <!--<div>更多数据加载中</div>-->
    <!--</div>-->
</div>
<script id="hotList-template" type="text/x-dot-template">
	<ul class="hot-group">
		{{ for(var i=0,j=it.mLife.list.length;i<j;i++ ){ }}
		<li class="hot-item">
			<div class="hot-ranking">
				<span class="runkingNum">
			        {{= i+1 }}<span style="font-size: 0.7rem;">{{= i!=0?i!=1?i!=2?"":"rd":"nd":"st" }}</span>
			    </span>
			</div>
			<div class="hot-life">
				<div class="hot-life-head" >
					<img src="{{= it.mLife.list[i].avatarInfo.avatarFrom?it.mLife.list[i].avatarInfo.avatar:userPhoto+it.mLife.list[i].avatarInfo.avatar }}" 
							onerror="this.src='../../image/avatar.png'" tapmode onclick="goDesignDatail('{{=it.mLife.list[i].userId}}','{{=it.mLife.list[i].nickName}}','{{=i}}')"/>
					<span class="hot-life-author" tapmode onclick="goDesignDatail('{{=it.mLife.list[i].userId}}','{{=it.mLife.list[i].nickName}}','{{=i}}')" >{{= it.mLife.list[i].nickName }}</span>
					<!--<span class="hot-life-action"><i class="duola-iconfont icon-nofollow"></i>{{= it.mLife.list[i].votedCount }}</span>-->

					<!--<span class="hot-life-action">票</i>{{= it.mLife.list[i].votedCount }}</span>-->
                    <div class="life-action">
                    <span class="life-action-item">
            		{{?it.mLife.list[i].voted == 'NO'}}
		            <i class="duola-iconfont icon-nofollow unlike" data-index="1" tapmode onclick="goRecommend(this, '{{=it.mLife.list[i]._id}}',{{=i}})"></i>
		            {{?}}
		            {{?it.mLife.list[i].voted != 'NO'}}
		            <i class="duola-iconfont icon-follow liked" data-index="2" tapmode onclick="goRecommend(this, '{{=it.mLife.list[i]._id}}',{{=i}})"></i>
		            {{?}}
		            <span class="life-vote-count">{{=it.mLife.list[i].votedCount}}</span>
            	</span>
				</div>
				</div>
				<div class="hot-life-body">
					<ul>
						{{ for(var m=0,n=it.mLife.list[i].imgs.length;m<n;m++){ }}
						<li><img src="{{= userPhoto + it.mLife.list[i].userId + '/community/' + it.mLife.list[i].imgs[m] + '?x-oss-process=image/resize,m_fill,h_200,w_200' }}"
								onclick="{{=getExecScript('showPhotoGroupProxy',[it.mLife.list[i].imgs.join(','),userPhoto + it.mLife.list[i].userId+ '/community/', m])}}"
								onerror="this.src='../../image/avatar.png'" /></li>
						{{ } }}
					</ul>
					<p>{{= it.mLife.list[i].content }}</p>
				</div>
			</div>
		</li>
		{{ } }}
	</ul>
</script>
<script id="goddessList-template" type="text/x-dot-template">

    <div class="goddessImg" style="position: relative">
        <div class="eldest-first">
            <i class="duola-iconfont icon-nianfeihuiyuan" style="color: #FF3C54"></i>
        <span class="runkNum">
            1<span style="font-size: 0.7rem;">st</span>
        </span>
        </div>

        {{?!it.mLife.list||!it.mLife.list[0]}}
        <div style="width: 100%;text-align: center;font-size: 0.7rem">暂无排名</div>
        {{}}}
        {{?it.mLife.list&&it.mLife.list[0]}}
        <img src="{{=!it.mLife.list||!it.mLife.list[0]||it.mLife.list[0].cover == ''?'../../image/errImg.png':userPhoto + it.mLife.list[0]._id+ '/community/' +it.mLife.list[0].cover+'?x-oss-process=image/resize,m_fill,h_400,w_400'}}"
             style="position: absolute; left: 0rem; top: 0rem; width: 100%; height: 100vw;
background-image: url(../../image/errImg.png);background-position: center; background-repeat: no-repeat;background-size: 100%"
             onerror='this.src="../../image/avatar.png"'>
        <div class="goddessImgContent">
            <img class="avatar" src="{{=!it.mLife.list||!it.mLife.list[0]||it.mLife.list[0].avatarInfo.avatar == null?'../../image/avatar.png':it.mLife.list[0].avatarInfo.isWxAvatar == 'YES'?it.mLife.list[0].avatarInfo.avatar:userPhoto+it.mLife.list[0].avatarInfo.avatar+'?x-oss-process=image/resize,m_fill,h_100,w_100'}}">
            <div class="userContent aui-ellipsis-1">
                {{=!it.mLife.list||!it.mLife.list[0]||it.mLife.list[0].content == ''?'':it.mLife.list[0].content}}
            </div>
            <i class="duola-iconfont icon-follow like" style="color: #FF3C54"></i>
            <div class="likeCount">{{=!it.mLife.list||!it.mLife.list[0]||it.mLife.list[0].votedCount}}</div>
        </div>
    </div>
        {{}}}

    {{for(var i = 0, len = it.mLife.count; i < len; i++){}}
    <div class="runkingItem" tapmode onclick="goDesignDatail('{{=it.mLife.list[i]._id}}','{{=it.mLife.list[i].nickName}}','{{=i}}')">
        {{?i == 0}}
        <div class="runkingNum">
            1<span style="font-size: 0.7rem;">st</span>
        </div>
        {{?}}
        {{?i == 1}}
        <div class="runkingNum"style=" background: #ff596d">
            2<span style="font-size: 0.7rem;">nd</span>
        </div>
        {{?}}
        {{?i == 2}}
        <div class="runkingNum" style="background: #ff7d8d">
            3<span style="font-size: 0.7rem;">rd</span>
        </div>
        {{?}}
        {{?i > 2}}
        <div class="runkingNum" style="background-color: #FFFFFF; color: #1A1A1A">
            {{=i+1}}
        </div>
        {{?}}
        <!--<div class="avatar2">-->
        <!--</div>-->
        <img src="{{=it.mLife.list[i].avatarInfo.avatar == null?'../../image/avatar.png':it.mLife.list[i].avatarInfo.isWxAvatar == 'YES'?it.mLife.list[i].avatarInfo.avatar:userPhoto+it.mLife.list[i].avatarInfo.avatar+'?x-oss-process=image/resize,m_fill,h_100,w_100'}}" class="avatar2" onerror='this.src="../../image/avatar.png"'/>

        <div class="userName2">
            {{=it.mLife.list[i].nickName}}
        </div>
       <!-- <i class="duola-iconfont icon-love-fill like2" style="color: #FF3C54"></i>-->
        <div class="likeCount2">{{=it.mLife.list[i].votedCount}}  票</div>
    </div>
    <div class="shadow-s"></div>
    {{}}}

    </div>
</script>
<script type="text/javascript" src="../../script/api.js"></script>
<script type="text/javascript" src="../../script/url.js"></script>
<script type="text/javascript" src="../../script/uz.js"></script>
<script type="text/javascript" src="../../script/doT_min.js"></script>
<script type="text/javascript" src="../../script/umeng_sdk.js"></script>
<script src="../../script/save_img.js"></script>
<script type="text/javascript">
    var vm;
//    用于判断网络请求是否完成的flag  初始化是有几个请求就有几个flag 用于处理异步显示问题
    var isGetData = false;
    apiready = function () {
//        程序入口
        init();
    }
    function getData() {
        var url = duolaGoddess + 'queen/top';
        var headers = _getAjaxHeaders(false, true);
        var data = {
            body:{
                page:1,
                pageSize:50
            }
        };
        var extra = {};
        _ajaxData(url, 'post', headers, data, function (ret, extra) {
            if (ret.statusCode == 200){
                var html = doTHtml('goddessList-template', ret);
                var beskSunContainer = $api.byId('goddessListContainer');
                $api.html(beskSunContainer, html);
            }
            //pullRefreshDone();
        }, function (err, extra) {
            //pullRefreshDone();
        }, 0, extra);

    }
    function getHotData(){  // 获取热门排行数据
    	var url = duolaGoddess+"queen/topSingle",
    		headers = _getAjaxHeaders(false, false),
    		data = _getAjaxData({
    			page:1,
    			pageSize:50
    		});
    	
    	_ajaxData(url, "post", headers, data, getHotDataSuccess, getHotDataError);
    	
    	function getHotDataSuccess(data){
    		if(data.statusCode==200){
    			var hotList = document.getElementById("hotListContainer"),
    				content = "";
    			
    			content = doTHtml("hotList-template",data);
    			hotList.innerHTML = content;
    		}else{
    			toastMsg(data.msg);
    		}
    		pullRefreshDone();
    	}
    	
    	function getHotDataError(err){
    		pullRefreshDone();
    	}
    }
    function loadMore() {
        api.addEventListener({
            name: 'scrolltobottom',
            extra: {threshold: 0}
        }, function (ret, err) {
            toastMsg("加载更多")
        });
    }

    //点赞
    var isLikeing = false;
    function goRecommend (el, lifeId, index) {
        //var position = (page-1)*10+index;
        //var conuntDom = $api.domAll('.likeCount')[parseInt(position)];
        var conuntDom = el.parentNode.querySelectorAll(".life-vote-count")[0];
        if (isLikeing){
            return;
        }
        if (!isLogin()){
            toastMsg('请先登录');
            return;
        }
        isLikeing = true;
        var url;
        var flag = el.dataset.index;
        flag == 1?url = duolaGoddess + 'queen/vote':url = duolaGoddess + 'queen/unvote';
        var headers = _getAjaxHeaders(true, true);
        var data = {
            body:{
                lifeId:lifeId
            }
        };
        var extra = {};
        _ajaxData(url, 'post', headers, data, function (ret, extra) {
            isLikeing = false;
            if (ret.statusCode == 200){
                if (flag == 1){
                    $api.removeCls(el,'icon-nofollow')
                    $api.addCls(el,'icon-follow');
                    $api.removeCls(el,'unlike');
                    $api.addCls(el,'liked');
                    el.dataset.index = 2;
                    $api.text(conuntDom, parseInt(conuntDom.innerHTML)+1)
                }else {
                    $api.removeCls(el,'icon-follow');
                    $api.addCls(el,'icon-nofollow');
                    $api.removeCls(el,'liked');
                    $api.addCls(el,'unlike');
                    el.dataset.index = 1;
                    $api.text(conuntDom, parseInt(conuntDom.innerHTML)-1)

                }
            }
        }, function (err, extra) {
            isLikeing = false;
            toastMsg("点赞失败")
        }, 0, extra);
    }
    function init() {
        //                    初始化方法
        api.setRefreshHeaderInfo({
            visible: true,
            loadingImg: 'widget://image/refresh.png',
            bgColor: 'rgba(245, 245, 245, 1.0)',
            textDown: '下刷新',
            textUp: '松刷新',
            showTime: true
        }, function(ret, err){
            if(ret){
            	getHotData();
                getData();
            }
        });
        api.refreshHeaderLoading();
        getHotData();
        getData();
//        loadMore();
    }
    
    function showTab(self, id){  // 显示tab
    	if(!showTab.currentHeader){
    		showTab.currentHeader = document.getElementById("tab-header-hot");
    		showTab.currentBody = document.getElementById("hotListContainer");
    	}
        if(id=="hotListContainer"){
            document.getElementById('btn').classList.remove("hide");
            document.getElementById('btn').style.display = "";
        }else{
            document.getElementById('btn').classList.add("hide");
            document.getElementById('btn').style.display = "none";
        }

    	if(showTab.currentHeader==self){
    		return
    	}

    	var targetBody = document.getElementById(id),
    		targetScrollTop = targetBody.getAttribute("data-scroll-top") || 0;
    	
    	showTab.currentBody.setAttribute("data-scroll-top", document.body.scrollTop); // 记住当前body的scrollTop	
    		
    	showTab.currentHeader.classList.remove("active");
    	self.classList.add("active");
    	showTab.currentBody.classList.add("hide");
    	targetBody.classList.remove("hide");
    	showTab.currentHeader = self;
    	showTab.currentBody = targetBody;
    	
        document.body.scrollTop = targetScrollTop;
    	
    }
    
    function showPhotoGroupProxy(imgs,srcPath, index){ // 查看大图代理
    	var paths = [];
    	imgs = imgs.split(",");
    	if(imgs.length){
    		paths = imgs.map(function(item,index){
    			return srcPath+item;
    		})
    		
    		showPhotoGroup(paths, index);
    	}
    }
    function showPhotoGroup(paths, index){	// 查看大图
		var photoBrowser = api.require('photoBrowser');
		photoBrowser.open({
			images:paths,
			bgColor:"#000",
			placeholderImg:"widget://image/errImg.png",
			activeIndex:index||0
		}, function(ret, err){
			if(ret.eventType=="show"){ // 如果photoBrowser为打开状态，阻止keyback的默认事件
				var param = {},
					winName = api.winName,
					frameName = api.frameName;
				param.name = "duolaGoddess";
				param.script = getExecScript("execPreventKeyBack",[winName, frameName,"execClosePhotoBrowser()"]);
				api.execScript(param);
			}
			if(ret.eventType=="click"){
				execClosePhotoBrowser();
			}
			if(ret.eventType=="longPress"){	// 长按保存图片
				var data = {
					from:{
						winName: api.winName,
						frameName: api.frameName
					}
				}
				openNewFrame("save_img","./save_img.html",null,null,data);
			}
		})
	}
	
	function execSavePhotoBrowserToAlbum(){  // 将photoBrowser正在展示的图片保存至相册，在其它页面异步调用
		savePhotoBrowserToAlbum(function(ret){
			toastMsg(ret.msg);
		},function(err){
			toastMsg(err.msg);
		});
	}
	
	function execClosePhotoBrowser(){  // 关闭photoBrowser, 在其它页面异步调用
    	var photoBrowser = api.require('photoBrowser');
    	photoBrowser.close();
    	execCancelPreventKeyBack();
    }
    
    function execCancelPreventKeyBack(){  // 取消win对keyback默认行为的阻止
    	var param = {};
		param.name = "duolaGoddess";
		param.script="execCancelPreventKeyBack()";
		api.execScript(param);
    }
    //返回顶部
    window.onload = function(){
        var obtn = document.getElementById('btn');  //获取回到顶部按钮的ID
        var clientHeight = document.documentElement.clientHeight;   //获取可视区域的高度
        var timer = null; //定义一个定时器
        var isTop = true; //定义一个布尔值，用于判断是否到达顶部

        window.onscroll = function(){         //滚动条滚动事件

            //获取滚动条的滚动高度
            var osTop = document.documentElement.scrollTop || document.body.scrollTop;

            if(osTop >= clientHeight){  //如果滚动高度大于可视区域高度，则显示回到顶部按钮
                //obtn.style.display = 'block';
                obtn.classList.remove("hide");
            }else{         //否则隐藏
                //obtn.style.display = 'none';
                obtn.classList.add("hide");
            }

            //主要用于判断当 点击回到顶部按钮后 滚动条在回滚过程中，若手动滚动滚动条，则清除定时器
            if(!isTop){

                clearInterval(timer);
            }
            isTop = false;

        }

        obtn.onclick = function(){    //回到顶部按钮点击事件
            //设置一个定时器
            timer = setInterval(function(){
                //获取滚动条的滚动高度
                var osTop = document.documentElement.scrollTop || document.body.scrollTop;
                //用于设置速度差，产生缓动的效果
                var speed = Math.floor(-osTop / 6);
                document.documentElement.scrollTop = document.body.scrollTop = osTop + speed;
                isTop =true;  //用于阻止滚动事件清除定时器
                if(osTop == 0){
                    clearInterval(timer);
                }
            },30);
        };
    };

    //打开详情页面
    function goDesignDatail(_id, userName) {
        var name = 'goddess_user0';
        var url = 'goddess_user0.html';
        var data = {
            _id:_id,
            userName: userName
        };
        
        if(_id==$api.getStorage("id")){
        	var param = {
        		name:api.winName,
        		frameName:"godessFooter",
        		script:"switchFooter(2)"
        	}
        	
        	api.execScript(param);
        	return;
        }
        
        openNewWin(name,null,data,null,url,null,null);
    }
    function start() {
        //                    初始化后执行

    }
    function retart() {
        //                    页面在后台状态时，需要操作时调用

    }
    function stop() {
        //                    页面进入后台时进行，但未关闭时进行相关操作时调用

    }
    function destroy() {
        //                  销毁界面时调用

    }
    function showView() {
        //                    异步控制界面组件的显示  更具flag判断来自定义 每次网络请求成功修改对应flag后都要调用
        if (isGetData){
            $api.removeCls($api.byId("app"), 'hide');
        }

    }

</script>
</body>
</html>