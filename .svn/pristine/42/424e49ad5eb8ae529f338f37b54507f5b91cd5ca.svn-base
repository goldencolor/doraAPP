<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
	<title>新增地址修改地址</title>
	<link rel="stylesheet" type="text/css" href="../css/api.css"/>
	<link rel="stylesheet" type="text/css" href="../css/2_0/aui_2_0.css" />
	<link rel="stylesheet" type="text/css" href="../css/2_0/rem.css"/>
	<link rel="stylesheet" type="text/css" href="../css/2_0/util.css"/>
	<style>
		.aui-content{
			margin-bottom: 1rem;
		}
		input,select,textarea,.aui-list-item-label{
			color: #707070 !important;
		}
		input[placeholder], [placeholder], *[placeholder] {
			color: #707070 !important;
		}
		.my-aui-btn-block{
			background-color:#FF3C54;
			color: #FFFFFF;
		}
		.aui-btn:active {
			color: #FFFFFF;
			background-color:#FF3C54;
			opacity: 0.9;
		}
		.aui-list-item:first-child{
			border: none;
		}
	</style>
</head>
<body>
<div class="aui-content">
	<ul class="aui-list aui-form-list">
		<li class="aui-list-item">
			<div class="aui-list-item-inner">
				<div class="aui-list-item-label">
					收件人
				</div>
				<div class="aui-list-item-input">
					<input type="text" id="name" placeholder="请输入收件人"/>
				</div>
			</div>
		</li>
		<li class="aui-list-item">
			<div class="aui-list-item-inner">
				<div class="aui-list-item-label">
					手机号
				</div>
				<div class="aui-list-item-input">
					<input type="tel" placeholder="请输入手机号" id="phone"/>
				</div>
			</div>
		</li>
		<li class="aui-list-item">
			<div class="aui-list-item-inner">
				<div class="aui-list-item-label">
					省份
				</div>
				<div class="aui-list-item-input">
					<select name="s_province" id="s_province" class="aui-input my-aui-border" onchange="changeProvince(this)">
						<option value="请选择">请选择</option>
					</select>
				</div>
			</div>
		</li>
		<li class="aui-list-item">
			<div class="aui-list-item-inner">
				<div class="aui-list-item-label">
					城市
				</div>
				<div class="aui-list-item-input">
					<select name="s_city" id="s_city" class="aui-input my-aui-border" onchange="changeCity(this)">
						<option value="请选择">请选择</option>
					</select>
				</div>
			</div>
		</li>
		<li class="aui-list-item">
			<div class="aui-list-item-inner">
				<div class="aui-list-item-label">
					区县
				</div>
				<div class="aui-list-item-input">
					<select name="s_county" id="s_county" class="aui-input my-aui-border" >
						<option value="请选择">请选择</option>
					</select>
				</div>
			</div>
		</li>
		<li class="aui-list-item">
			<div class="aui-list-item-inner">
				<div class="aui-list-item-label">
					街道
				</div>
				<div class="aui-list-item-input">
					<!--<textarea placeholder="请输入你的街道" id="detail"></textarea>-->
					<input type="text" placeholder="请输入你的街道" id="detail"/>
				</div>
			</div>
		</li>
	</ul>
</div>
<div class="aui-btn aui-btn-block my-aui-btn-block" tapmode onclick="addrBtn()">提交</div>
</body>
<script type="text/javascript" src="../script/api.js"></script>
<script type="text/javascript" src="../script/url.js"></script>
<script type="text/javascript" src="../script/uz.js"></script>
<script type="text/javascript" src="../script/umeng_sdk.js"></script>
<script type="text/javascript">
	var frameData = null;
	var isChange = false;//修改地址标识变量
	var id = null;//修改地址_id
	var list = null;//修改地址list
	var provinceEl = null;//省
	var cityEl = null;//城市
	var areaEl = null;//区

	apiready = function(){
		frameData = api.pageParam.data;
		provinceEl = $api.byId('s_province');
		cityEl = $api.byId('s_city');
		areaEl = $api.byId('s_county');
		if(isDefine(frameData.id) && isDefine(frameData.list)){
			isChange = true;
			id = frameData.id;
			list = frameData.list;
//			list = {"province":"山西省","detail":"测试","phone":"13163238988","county":"韩店镇","city":"长治市","name":"测试"};
		}
//		console.log(getLogStr([id,list]));
		if(isChange) {
			_setInputVal('detail', list['detail']);
			_setInputVal('phone', list['phone']);
			_setInputVal('name', list['name']);
			getProvince('isChange');
			getCity(list.province,'isChange');
			getArea(list.province,list.city,'isChange');
		}else{
			getProvince();
		}
	};

	//初始化省份地址
	function getProvince(flag) {
		loadingShow();
		var url = serviceUser + 'address/region';
		var headers = _getAjaxHeaders(true, true);
		var data = _getAjaxData();
		var extra = flag;
		_ajaxData(url, 'post', headers, data, getProvinceHtml, getProvinceError, 0, extra);
	}
//	getProvinceHtml();
	function getProvinceHtml(ret,extra){
//		ret = ret || {"count":35,"statusCode":200,"msg":"OK","list":["北京","天津","河北","山西","内蒙古","辽宁","吉林","黑龙江","上海","江苏","浙江","安徽","福建","江西","山东","河南","湖北","湖南","广东","广西","海南","重庆","四川","贵州","云南","西藏","陕西","甘肃","青海","宁夏","新疆","台湾","澳门","香港","钓鱼岛"]};
		if(ret.statusCode == 200 && ret.count > 0){
			ret.list.map(function(value){
				provinceEl.options.add(new Option(value,value));
			});
			if(extra){
				var provinceIndex = ret.list.indexOf(list.province);
				provinceEl.options[provinceIndex+1].selected = true;
			}
		}else if(ret.msg){
			toastMsg(ret.msg);
		}
		loadingHide();
	}

	function getProvinceError(err,extra){
		loadingHide();
		if(err.msg){
			toastMsg(err.msg);
		}
	}

	//更改省
	function changeProvince(el){
		var province = el.options[el.selectedIndex].value;
//		console.log(province);
		if(province != '请选择'){
			if(cityEl.options.length > 1){
				cityEl.innerHTML = '<option value="请选择">请选择</option>';
				areaEl.innerHTML = '<option value="请选择">请选择</option>';
			}
			getCity(province);
		}
	}

	//初始化城市
	function getCity(province,flag) {
		loadingShow();
		var url = serviceUser + 'address/region';
		var headers = _getAjaxHeaders(true, true);
		var data = _getAjaxData({
			"province":province
		});
		var extra = flag;
		_ajaxData(url, 'post', headers, data, getCityHtml, getCityError, 0, extra);
	}

	//	getCityHtml();
	function getCityHtml(ret,extra){
//		ret = ret || {"province":"河北","statusCode":200,"list":["石家庄","唐山","秦皇岛","邯郸","邢台","保定","张家口","承德","沧州","廊坊","衡水","其他"],"count":12,"msg":"OK"};
		if(ret.statusCode == 200 && ret.count > 0){
			ret.list.map(function(value){
				cityEl.options.add(new Option(value,ret.province));
			});
			if(extra){
				var cityIndex = ret.list.indexOf(list.city);
				cityEl.options[cityIndex+1].selected = true;
			}
		}else if(ret.msg){
			toastMsg(ret.msg);
		}
		loadingHide();
	}

	function getCityError(err,extra){
		loadingHide();
		if(err.msg){
			toastMsg(err.msg);
		}
	}

	//更改城市
	function changeCity(el){
		var city = el.options[el.selectedIndex].text;
		var province = el.options[el.selectedIndex].value;
//		console.log(getLogStr([province,city]));
		if(city != '请选择'){
			if(areaEl.options.length > 1){
				areaEl.innerHTML = '<option value="请选择">请选择</option>';
			}
			getArea(province,city);
		}
	}

	//初始化区
	function getArea(province,city,flag) {
		loadingShow();
		var url = serviceUser + 'address/region';
		var headers = _getAjaxHeaders(true, true);
		var data = _getAjaxData({
			"province":province,
			"city":city
		});
		var extra = flag;
		_ajaxData(url, 'post', headers, data, getAreaHtml, getAreaError, 0, extra);
	}

	//	getAreaHtml();
	function getAreaHtml(ret,extra){
//		ret = ret || {"province":"河北","statusCode":200,"list":["长安区","桥东区","桥西区","新华区","郊  区","井陉矿区","井陉县","正定县","栾城县","行唐县","灵寿县","高邑县","深泽县","赞皇县","无极县","平山县","元氏县","赵  县","辛集市","藁","晋州市","新乐市","鹿泉市"],"count":23,"msg":"OK","city":"石家庄"};
		if(ret.statusCode == 200 && ret.count > 0){
			ret.list.map(function(value){
				areaEl.options.add(new Option(value,value));
			});
			if(extra){
				var areaIndex = ret.list.indexOf(list.county);
				areaEl.options[areaIndex+1].selected = true;
			}
			if(ret.list.length == 1 && ret.list[0] == '其他'){
				areaEl.options[1].selected = true;
			}
		}else if(ret.msg){
			toastMsg(ret.msg);
		}
		loadingHide();
	}

	function getAreaError(err,extra){
		loadingHide();
		if(err.msg){
			toastMsg(err.msg);
		}
	}




	function newOrder() {

		api.confirm({
			msg: "确定此地址，直接下单吗?",
			buttons: ['确定', '取消']
		}, function(ret, err){
			if (ret) {
				api.sendEvent({
					name: 'chooseAddrEvent',
					extra: {
						key: "0"
					}
				});
			}
			closeNewly();
		})

	}
	function addrBtnSuccessCallback(ret,extra){
		if(ret.statusCode=='200'){
			api.sendEvent({
				name: 'setAddrList',
				extra: {
					key: 'OK'
				}
			});
			if (frameData === "bag") {
				newOrder();
				return;
			}
			closeNewly();
		}else if(ret.statusCode=='10104'){
			toastMsg(ret.msg);
			setTimeout(function(){
				toLogin();
			},1000);
		}else{
			toastMsg(ret.msg);
		}
	}
	function addrBtnErrorCallback(err,extra){
		toastMsg(err.msg);
	}

	function  closeNewly(){
		toastMsg('保存成功');
		setTimeout(function(){
			api.closeWin();
			onPageEndUmeng(CONSTANT.PAGE.NEWADDR);
		},1000);
	}

	function addrBtn(){
		var name = $api.val($api.byId('name')).trim();
		var phone = $api.val($api.byId('phone')).trim();
		var province = $api.val(provinceEl);
		var city = cityEl.options[cityEl.selectedIndex].text;
		var county = $api.val(areaEl);
		var detail = $api.val($api.byId('detail')).trim();
		if(!isDefine(name)){
			toastMsg("请输入收件人");
			return;
		}
		if(!CONSTANT.REG.MOBILE.test(phone)) {
			toastMsg("请输入有效的手机号码");
			return false;
		}
		if(!isDefine(province) || province == '请选择'){
			toastMsg("请选择省份");
			return;
		}
		if(!isDefine(city) || city == '请选择'){
			toastMsg("请选择城市");
			return;
		}
		if(!isDefine(county) || county == '请选择'){
			toastMsg("请选择区县");
			return;
		}
		if(!isDefine(detail)){
			toastMsg("请输入街道");
			return;
		}
		var url = serviceNew + 'user/address/add';
		if(isChange){
			url = serviceNew + 'user/address/update/'+id;
		}
		var headers = _getAjaxHeaders(true,true);
		var data = _getAjaxData({
			province:province,
			city:city,
			county:county,
			detail:detail,
			name:name,
			phone:phone
		});
		var extra = null;
		_ajaxData(url,'post',headers,data,addrBtnSuccessCallback,addrBtnErrorCallback,0,extra);
	}

	//公用头部导航栏坐侧点击异步执行的方法
	function execNavLeftCallback(value){
		var from = frameData.from;
		var callback = frameData.leftNavCallback ? frameData.leftNavCallback : '';
		if(!isDefine(callback)){
			return;
		}
		var extra = frameData.leftNavExtra ? frameData.leftNavExtra : '';
		var params = {
			script: getExecScript(callback,new Array(extra,api.winName,value))
		};
		if(isDefine(from.winName)){
			params.name = from.winName;
		}
		if(isDefine(from.frameName)){
			params.frameName = from.frameName;
		}
		api.execScript(params);
	}

	//公用头部导航栏右侧点击异步执行的方法
	function execNavRightCallback(value){
		var from = frameData.from;
		var callback = frameData.rightNavCallback ? frameData.rightNavCallback : '';
		if(!isDefine(callback)){
			return;
		}
		var extra = frameData.rightNavExtra ? frameData.rightNavExtra : '';
		var params = {
			script: getExecScript(callback,new Array(extra,api.winName,value))
		};
		if(isDefine(from.winName)){
			params.name = from.winName;
		}
		if(isDefine(from.frameName)){
			params.frameName = from.frameName;
		}
		api.execScript(params);
	}
</script>
</html>